"""Add new fields to sales table

Revision ID: cc3c6f44f45d
Revises: 67ddef6772e2
Create Date: 2025-07-28 18:54:55.549522

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cc3c6f44f45d'
down_revision: Union[str, Sequence[str], None] = '67ddef6772e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # op.alter_column('quotations', 'user_id',
    #     existing_type=sa.UUID(),
    #     type_=sa.String(),
    #     existing_nullable=False)

    op.add_column('sales', sa.Column('sale_number', sa.String(length=50), nullable=False))
    op.add_column('sales', sa.Column('customer_id', sa.UUID(), nullable=True))
    op.add_column('sales', sa.Column('warehouse_id', sa.UUID(), nullable=True))
    op.add_column('sales', sa.Column('due_date', sa.Date(), nullable=True))
    op.add_column('sales', sa.Column('subtotal', sa.DECIMAL(precision=12, scale=2), nullable=True))
    op.add_column('sales', sa.Column('tax_amount', sa.DECIMAL(precision=12, scale=2), nullable=True))
    op.add_column('sales', sa.Column('discount_amount', sa.DECIMAL(precision=12, scale=2), nullable=True))
    op.add_column('sales', sa.Column('paid_amount', sa.DECIMAL(precision=12, scale=2), nullable=True))
    payment_status_enum = postgresql.ENUM('unpaid', 'partial', 'paid', name='paymentstatusenum')
    payment_status_enum.create(op.get_bind())
    op.add_column('sales', sa.Column(
        'payment_status',
        sa.Enum('unpaid', 'partial', 'paid', name='paymentstatusenum'),
        nullable=False,
        server_default='unpaid'
    ))
    op.add_column('sales', sa.Column('shipping_address', sa.Text(), nullable=True))
    op.add_column('sales', sa.Column('created_by', sa.UUID(), nullable=True))
    op.add_column('sales', sa.Column('shipped_at', sa.TIMESTAMP(), nullable=True))

    op.alter_column('sales', 'updated_at',
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.TIMESTAMP(),
        existing_nullable=True,
        existing_server_default=sa.text('now()'))

    op.create_unique_constraint("uq_sales_sale_number", 'sales', ['sale_number'])
    op.create_foreign_key("fk_sales_warehouse_id", 'sales', 'warehouses', ['warehouse_id'], ['id'])
    op.create_foreign_key("fk_sales_customer_id", 'sales', 'customers', ['customer_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'sales', type_='foreignkey')
    op.drop_constraint(None, 'sales', type_='foreignkey')
    op.drop_constraint(None, 'sales', type_='unique')
    op.alter_column('sales', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('sales', 'shipped_at')
    op.drop_column('sales', 'created_by')
    op.drop_column('sales', 'shipping_address')
    op.drop_column('sales', 'payment_status')
    payment_status_enum = postgresql.ENUM('unpaid', 'partial', 'paid', name='paymentstatusenum')
    payment_status_enum.drop(op.get_bind())
    op.drop_column('sales', 'paid_amount')
    op.drop_column('sales', 'discount_amount')
    op.drop_column('sales', 'tax_amount')
    op.drop_column('sales', 'subtotal')
    op.drop_column('sales', 'due_date')
    op.drop_column('sales', 'warehouse_id')
    op.drop_column('sales', 'customer_id')
    op.drop_column('sales', 'sale_number')
    
    # op.alter_column('quotations', 'user_id',
    #            existing_type=sa.String(),
    #            type_=sa.UUID(),
    #            existing_nullable=False)
    # ### end Alembic commands ###
